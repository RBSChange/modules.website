<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">	
	
	<binding id="cEditPageContent" extends="layout.cDocumentEditor#cProperty">
		<implementation>
			<field name="contentInfo">null</field>
			<method name="setValue">
				<parameter name="val" />
				<body><![CDATA[
					this.contentInfo = val;
				]]></body>
			</method>
			
			<method name="editContent">
				<body><![CDATA[
					var edt = this.section.panel.documentEditor;
					if (edt.isValidPanel('properties'))
					{
						var module = edt.module;
						module.editPageContentFromDocument(this.contentInfo.id, this.contentInfo.lang);
					}
				]]></body>
			</method>			
		</implementation>
		
		<content>
			<xul:hbox>
				<xul:label xbl:inherits="value=label" />
				<xul:label value=":" />
				<xul:label class="text-link" onclick="document.getBindingParent(this).editContent()" value="${trans:m.website.bo.doceditor.edit-content-link,ucf,attr}"/>
			</xul:hbox>			
		</content>
	</binding>
	
	<binding id="cPageVersionGrid"  extends="widgets.cGrid#cAbstractSortableGrid">
		<implementation>
			<constructor><![CDATA[
				this.fireEvent('gridInitialised');
			]]></constructor>
			
			<method name="getPanel">
				<body><![CDATA[	
					var pnode = this.parentNode;
					while (pnode && !pnode.mDocumentId) {pnode = pnode.parentNode;}
					return pnode;				
				]]></body>
			</method>	
			
			
			<method name="execute_edit">
				<parameter name="rowNode" />
				<parameter name="rowData" />			
				<body><![CDATA[
					if (this.disabled) {return;}
					var uri = ['website', 'openDocument', 'modules_website_pageversion', rowData.id, 'properties'].join(',');
					openActionUri(uri);
				]]></body>
			</method>
			
			<method name="execute_delete">
				<parameter name="rowNode" />
				<parameter name="rowData" />			
				<body><![CDATA[
					if (this.disabled) {return;}
					if (confirm("${trans:m.website.bo.doceditor.page-version-list.confirm-delete-version,ucf,js}"))
					{
						var me = this;
						var callBack = function(result) {me.onDeleted(result);};
						wCore.executeJSON('website', 'DeleteJSON', {cmpref: rowData.id, lang: rowData.lang}, callBack, true);
					}
				]]></body>
			</method>
			
			<method name="execute_preview">
				<parameter name="rowNode" />
				<parameter name="rowData" />
				<body><![CDATA[
					wToolkit.openurl(rowData.url);
				]]></body>
			</method>
			
			<method name="execute_newversion">
				<parameter name="rowNode" />
				<parameter name="rowData" />			
				<body><![CDATA[
					if (this.disabled) {return;}
					if (confirm("${trans:m.website.bo.doceditor.page-version-list.confirm-duplicate-version,ucf,js}"))
					{
						this.getPanel().onDuplicateVersion(rowData.id);
					}
				]]></body>
			</method>
						
			<method name="onDeleted">
				<parameter name="result" />
				<body><![CDATA[
					var panel = this.getPanel();
					if (result.status = 'OK' && result.contents.id == 0 && this.getRowCount() == 2)
					{
						panel.documentEditor.executeBackToList();
						return;
					}
					
					panel.documentEditor.clearTabs();
					panel.documentEditor.executeServerAction('properties', 'Initialize');
				]]></body>
			</method>	
				
			<method name="setCellValue">
				<parameter name="cell" />
				<parameter name="name" />
				<parameter name="dataRow" />
				<body><![CDATA[	
					var value = dataRow[name];			
					switch (name)
					{
						case 'startpublicationdate': 
							value = dataRow['uistartpublicationdate'];
							break;
						case 'endpublicationdate': 
							value = dataRow['uiendpublicationdate'];
							break;							
					}
					
					if ('value' in cell)
					{
						cell.value = value;
					}
					else
					{
						cell.setAttribute('value', value);
					}
				]]></body>
			</method>						
		</implementation>
			
		<content>
			<xul:grid flex="1" anonid="grid" xbl:inherits="disabled">
				<xul:columns>
					<xul:column />
					<xul:column flex="1" />
					<xul:column flex="1" />
					<xul:column flex="1" />
					<xul:column flex="1" />
					<xul:column />
				</xul:columns>
				<xul:rows>
					<xul:row class="head" anonid="head-row">
						<xul:label name="publicationstatus" sortonfield="true"
							value="" tooltiptext="${trans:m.website.bo.doceditor.page-version-list.status,ucf,attr}" />
						<xul:label name="label" sortonfield="true"
							value="${trans:m.website.bo.doceditor.page-version-list.label,ucf,attr}" />
						<xul:label name="startpublicationdate" sortonfield="true"
							value="${trans:m.website.bo.doceditor.page-version-list.startpublicationdate,ucf,attr}" />
						<xul:label name="endpublicationdate" sortonfield="true"
							value="${trans:m.website.bo.doceditor.page-version-list.endpublicationdate,ucf,attr}" />
						<xul:label name="currentlabel"
							value="${trans:m.website.bo.doceditor.page-version-list.current,ucf,attr}" />
						<xul:label name="actionrow"
							value="${trans:m.website.bo.doceditor.page-version-list.actions,ucf,attr}" />
					</xul:row>
				</xul:rows>
			</xul:grid>
			
			<xul:row anonid="template-row" class="document" hidden="true">
				<xul:cpublicationcell value="" />
				<xul:label value="" />
				<xul:label value="" />
				<xul:label value="" />
				<xul:label value="" />
				<xul:toolbar class="actions">
					<xul:toolbarbutton action="preview" image="{IconsBase}/small/preview.png" 
						tooltiptext="${trans:m.website.bo.actions.openpage,ucf,attr}" />
					<xul:toolbarbutton action="edit" image="{IconsBase}/small/edit.png" 
						tooltiptext="${trans:m.uixul.bo.actions.edit,ucf,attr}" />
					<xul:toolbarbutton action="newversion" image="{IconsBase}/small/add.png" 
						tooltiptext="${trans:m.uixul.bo.actions.duplicate,ucf,attr}" />
					<xul:toolbarbutton action="delete" image="{IconsBase}/small/delete.png" 
						tooltiptext="${trans:m.uixul.bo.actions.delete,ucf,attr}" />
				</xul:toolbar>
			</xul:row>	
		</content>	
	</binding>
</bindings>